---
pipeline_key: buzzml_g_product_commerce_random1000
pipeline_type: athena_process
pipeline_dag_configs:
  start_date: 2020-11-28 00:00:00
  schedule_interval: "0 * * * *"

alerts:
  slack:
    - trigger: failure
      args:
        channel: data-emergency-oracle
    - trigger: sla_miss
      args:
        channel: data-emergency-oracle
    - trigger: retry
      args:
        channel: data-warning
        
upstream_dependencies:
  - dag_id: redshift_s3_sync_ba_l_product
    timedelta_hours: 0

sensor_soft_fail: false

athena:
  workgroup: oracle
  process_query: |
    CREATE TABLE IF NOT EXISTS {database}.{temp_table}
    WITH (
          format = 'PARQUET',
          parquet_compression = 'SNAPPY',
          external_location = 's3://{output_bucket}/{output_prefix}'
    ) AS (
      SELECT
        product_feed_id,
        COUNT(*) AS product_count,
        ARRAY_JOIN(ARRAY_AGG(id), '|') AS product_ids
      FROM(
        WITH product AS (
          SELECT
            id,
            ARBITRARY(product_feed_id) AS product_feed_id
          FROM
            prod_buzzad.l_product
          GROUP BY
            id
        )
        SELECT
          id,
          product_feed_id,
          RANK() OVER (PARTITION BY product_feed_id ORDER BY RANDOM()) AS rank
        FROM
          product
        --   prod_buzzad.g_product_dim
        -- WHERE
        --   partition_timestamp = TIMESTAMP'{start_time}'
      )
      WHERE
        rank <= 1000
      GROUP BY
        product_feed_id
    );

  output_bucket: prod-buzzvil-data-lake
  output_prefix: buzzml/gold/product_commerce_random1000/year={year}/month={month}/day={day}/hour={hour}
  file_key: buzzml_g_product_commerce_random1000
  file_extension: parquet

  database: prod_buzzml
  table: g_product_commerce_random1000
  location: s3://prod-buzzvil-data-lake/buzzml/gold/product_commerce_random1000

  partition:
    name: partition_timestamp
    value: "{{ execution_date.strftime('%Y-%m-%d %H:00:00') }}"
    location: s3://prod-buzzvil-data-lake/buzzml/gold/product_commerce_random1000/year={year}/month={month}/day={day}/hour={hour}
  create_table_syntax: |
    CREATE EXTERNAL TABLE IF NOT EXISTS {database}.{table} (
      product_feed_id       BIGINT,
      product_count         SMALLINT,
      product_ids           STRING
    )
    PARTITIONED BY (partition_timestamp timestamp)
    STORED AS PARQUET
    LOCATION '{location}'
    tblproperties("parquet.compress"="SNAPPY");