---
pipeline_key: videoeventtrackingsvc_m_event
pipeline_type: athena_process
pipeline_dag_configs:
  start_date: 2020-03-13 00:00:00
  schedule_interval: "20 * * * *"
athena:
  process_query: |
    CREATE TABLE IF NOT EXISTS {database}.{temp_table}
    WITH (
        format = 'PARQUET',
        parquet_compression = 'SNAPPY',
        external_location = 's3://{output_bucket}/{output_prefix}'
    ) AS (
        SELECT
          lineitem_id,
          unit_id,
          event,
          COUNT(event) as event_count,
          date_trunc('hour', created_at) as data_at
        FROM
          prod_videoeventtrackingsvc.g_event
        WHERE
          partition_timestamp >= TIMESTAMP'{start_time}' AND
          partition_timestamp < TIMESTAMP'{end_time}'
        GROUP BY
          1, 2, 3, 5
    );
  output_bucket: prod-buzzvil-data-lake
  output_prefix: videoeventtrackingsvc/mart/video_event_log/year={year}/month={month}/day={day}/hour={hour}
  file_key: videoeventtrackingsvc_m_event
  file_extension: parquet

  database: prod_videoeventtrackingsvc
  table: m_event
  location: s3://prod-buzzvil-data-lake/videoeventtrackingsvc/mart/video_event_log
  partition:
    name: partition_timestamp
    value: "{{ execution_date.strftime('%Y-%m-%d %H:00:00') }}"
    location: s3://prod-buzzvil-data-lake/videoeventtrackingsvc/mart/video_event_log/year={year}/month={month}/day={day}/hour={hour}
  create_table_syntax: |
    CREATE EXTERNAL TABLE IF NOT EXISTS {database}.{table} (
      lineitem_id           BIGINT,
      unit_id               BIGINT,
      event                 VARCHAR(20),
      event_count           BIGINT,
      data_at               TIMESTAMP
    )
    PARTITIONED BY (partition_timestamp timestamp)
    STORED AS PARQUET
    LOCATION '{location}'
    tblproperties("parquet.compress"="SNAPPY");
