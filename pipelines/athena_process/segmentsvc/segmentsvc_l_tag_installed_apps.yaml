---
pipeline_key: segmentsvc_l_tag_installed_apps
pipeline_type: athena_process
pipeline_dag_configs:
  start_date: 2020-11-21 00:00:00
  schedule_interval: "0 * * * *"

alerts:
  slack:
    - trigger: failure
      args:
        channel: dev-emergency-mugshot
    - trigger: sla_miss
      args:
        channel: dev-emergency-mugshot
    - trigger: retry
      args:
        channel: data-warning

upstream_dependencies:
  - dag_id: athena_catalog_ba_l_installed_apps
    timedelta_hours: 0
downstream_dependencies:
  - dag_id: athena_process_segmentsvc_g_tag_installed_apps
    task_id: generate_uuid

athena:
  workgroup: segmentsvc
  process_query: |
    CREATE TABLE IF NOT EXISTS {database}.{temp_table}
    WITH (
      format = 'PARQUET',
      parquet_compression = 'SNAPPY',
      external_location = 's3://{output_bucket}/{output_prefix}'
    ) AS (
    SELECT
        383891203577056 AS data_source_id,
        tag_time AS tag_timestamp,
        payload AS payload,
        IF(device_id_key = 'ifa', 'IFA', device_id_key) AS uid_key,
        device_id_value AS uid_value
    FROM
    (
      SELECT
        SPLIT_PART(device_id, ':', 1) AS device_id_key,
        SPLIT_PART(device_id, ':', 2) AS device_id_value,
        MAP(
          ARRAY['installed_apps'],
          ARRAY[package_names]
        ) AS payload,
        time AS tag_time
      FROM
        prod_buzzad.l_installed_apps
      WHERE
        partition_timestamp >= TIMESTAMP'{start_time}' AND
        partition_timestamp < TIMESTAMP'{end_time}'
    )

    WHERE
    device_id_key   IS NOT null AND device_id_key   <> '' AND
    device_id_value IS NOT null AND device_id_value <> ''

    );
  output_bucket: "{{ var.value.get('server_env', 'prod') }}-buzzvil-data-lake"
  output_prefix: "segmentsvc/landing/tag/year={year}/month={month}/day={day}/hour={hour}/origin=installed_apps_tag"
  file_key: installed_apps_tag
  file_extension: parquet

  create_table_syntax: |
    CREATE EXTERNAL TABLE IF NOT EXISTS {database}.{table} (
      `data_source_id` BIGINT,
      `tag_timestamp` TIMESTAMP,
      `payload` MAP<STRING,STRING>,
      `uid_key` STRING,
      `uid_value` STRING
    )
    PARTITIONED BY (
      partition_timestamp TIMESTAMP
    )
    STORED AS PARQUET
    LOCATION '{location}'
    TBLPROPERTIES("parquet.compress"="SNAPPY")
    ;
  database: "{{ var.value.get('server_env', 'prod') }}_segmentsvc"
  table: l_tag_installed_apps
  location: "s3://{{ var.value.get('server_env', 'prod') }}-buzzvil-data-lake/segmentsvc/landing/tag/"
  partition:
    name: partition_timestamp
    value: "{{ execution_date.strftime('%Y-%m-%d %H:00:00') }}"
    location: "s3://{{{{ var.value.get('server_env', 'prod') }}}}-buzzvil-data-lake/segmentsvc/landing/tag/year={year}/month={month}/day={day}/hour={hour}/origin=installed_apps_tag"