---
pipeline_key: ba_g_statistics_daily_unique_ad_viewer
pipeline_type: athena_process
pipeline_dag_configs:
  start_date: 2020-01-15 16:00:00
  schedule_interval: "0 16 * * *"

alerts:
  slack:
    - trigger: failure
      args:
        channel: data-emergency
    - trigger: sla_miss
      args:
        channel: data-emergency
    - trigger: retry
      args:
        channel: data-warning

upstream_dependencies:
  - dag_id: athena_catalog_ba_l_impression
    timedelta_hours: 0

sensor_soft_fail: false

athena:
  workgroup: buzzad
  process_query: |
    CREATE TABLE IF NOT EXISTS {database}.{temp_table}
    WITH (
          format = 'PARQUET',
          parquet_compression = 'SNAPPY',
          external_location = 's3://{output_bucket}/{output_prefix}'
    ) AS (
      SELECT
      	viewer_id,
      	unit_id,
      	ARBITRARY(ifa) AS ifa,
      	ARBITRARY(COALESCE(registered_days, 0)) AS registered_days,
        CAST(DATE_TRUNC('day', ARBITRARY(partition_timestamp) + interval '9' HOUR) AS VARCHAR(64)) AS created_at
      FROM
      	prod_buzzad.l_impression
      WHERE
      	partition_timestamp >= TIMESTAMP'{start_time}' - INTERVAL '1' HOUR AND
      	partition_timestamp < TIMESTAMP'{end_time}' - INTERVAL '1' HOUR
      GROUP BY
      	viewer_id, unit_id
    );

  output_bucket: "{{ var.value.get('server_env', 'prod') }}-buzzvil-data-lake"
  output_prefix: buzzad/gold/statistics_daily_unique_ad_viewer/year={year}/month={month}/day={day}/hour={hour}
  file_key: buzzad_gold_statistics_daily_unique_ad_viewer
  file_extension: parquet

  create_table_syntax: |
    CREATE EXTERNAL TABLE IF NOT EXISTS {database}.{table} (
      viewer_id                VARCHAR(64),
      unit_id                  BIGINT,
      ifa                      VARCHAR(64),
      registered_days          INT,
      created_at               VARCHAR(64)
    )
    PARTITIONED BY (partition_timestamp timestamp)
    STORED AS PARQUET
    LOCATION '{location}'
    tblproperties("parquet.compress"="SNAPPY");

  database: "{{ var.value.get('server_env', 'prod') }}_buzzad"
  table: g_statistics_daily_unique_ad_viewer
  location: "s3://{{ var.value.get('server_env', 'prod') }}-buzzvil-data-lake/buzzad/gold/statistics_daily_unique_ad_viewer"

  partition:
    name: partition_timestamp
    value: "{{ (execution_date + macros.timedelta(days=1)).strftime('%Y-%m-%d 00:00:00') }}"
    location: "s3://{{{{ var.value.get('server_env', 'prod') }}}}-buzzvil-data-lake/buzzad/gold/statistics_daily_unique_ad_viewer/year={year}/month={month}/day={day}/hour={hour}"


