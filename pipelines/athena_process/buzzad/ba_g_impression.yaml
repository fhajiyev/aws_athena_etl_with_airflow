---
pipeline_key: ba_g_impression
pipeline_type: athena_process
pipeline_dag_configs:
  start_date: 2020-01-16 00:00:00
  schedule_interval: "0 * * * *"
  depends_on_past: false
  concurrency: 20
  max_active_runs: 20

upstream_dependencies:
  - dag_id: athena_catalog_ba_l_impression
    timedelta_hours: 0

athena:
  process_query: |
    CREATE TABLE IF NOT EXISTS {database}.{temp_table}
    WITH (
          format = 'PARQUET',
          parquet_compression = 'SNAPPY',
          external_location = 's3://{output_bucket}/{output_prefix}',
          bucket_count = 10,
          bucketed_by = ARRAY['viewer_id']
    ) AS (
        SELECT
            viewer_id,
            unit_id,
            lineitem_id,
            ip,
            sales,
            year_of_birth,
            sex,
            carrier,
            region,
            platform,
            country,
            device_name,
            publisher_user_id,
            relationship,
            ifa,
            udid,
            adid,
            user_agent,
            app_version,
            lat,
            lon,
            web_user_agent,
            TRY_CAST(position AS INTEGER) AS position,
            session_id,
            creative_id,
            adnetwork_id,
            adnetwork_campaign_id,
            registered_days,
            network_type,
            request_id,
            product_code,
            product_id,
            "time" AS created_at,
            allocation_id,
            initial_allocation_id
        FROM
            prod_buzzad.l_impression
        WHERE
            partition_timestamp >= TIMESTAMP'{start_time}' AND
            partition_timestamp < TIMESTAMP'{end_time}'
    );
  output_bucket: "{{ var.value.get('server_env', 'prod') }}-buzzvil-data-lake"
  output_prefix: buzzad/gold/impression/year={year}/month={month}/day={day}/hour={hour}
  file_key: buzzad-impression
  file_extension: parquet

  database: "{{ var.value.get('server_env', 'prod') }}_buzzad"
  table: g_impression
  location: "s3://{{ var.value.get('server_env', 'prod') }}-buzzvil-data-lake/buzzad/gold/impression"
  partition:
    name: partition_timestamp
    value: "{{ execution_date.strftime('%Y-%m-%d %H:00:00') }}"
    location: "s3://{{{{ var.value.get('server_env', 'prod') }}}}-buzzvil-data-lake/buzzad/gold/impression/year={year}/month={month}/day={day}/hour={hour}"
  create_table_syntax: |
    CREATE EXTERNAL TABLE IF NOT EXISTS {database}.{table}(
        viewer_id                VARCHAR(64),
        unit_id                  BIGINT,
        lineitem_id              BIGINT,
        ip                       BIGINT,
        sales                    FLOAT,
        year_of_birth            INT,
        sex                      VARCHAR(1),
        carrier                  VARCHAR(64),
        region                   VARCHAR(64),
        platform                 VARCHAR(64),
        country                  VARCHAR(2),
        device_name              VARCHAR(64),
        publisher_user_id        VARCHAR(64),
        relationship             VARCHAR(2),
        ifa                      VARCHAR(64),
        udid                     VARCHAR(64),
        adid                     VARCHAR(64),
        user_agent               VARCHAR(64),
        app_version              VARCHAR(32),
        lat                      FLOAT,
        lon                      FLOAT,
        web_user_agent           VARCHAR(256),
        position                 INT,
        session_id               VARCHAR(45),
        creative_id              BIGINT,
        adnetwork_id             BIGINT,
        adnetwork_campaign_id    VARCHAR(128),
        registered_days          INT,
        network_type             VARCHAR(64),
        request_id               VARCHAR(64),
        product_code             VARCHAR(64),
        product_id               VARCHAR(64),
        created_at               TIMESTAMP,
        allocation_id            VARCHAR(64),
        initial_allocation_id    VARCHAR(64)
    )
    PARTITIONED BY (partition_timestamp timestamp)
    STORED AS PARQUET
    LOCATION '{location}'
    tblproperties("parquet.compress"="SNAPPY");
