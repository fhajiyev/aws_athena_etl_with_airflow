# Note that
# - interval '1 hours' is actually "interval - 16 (execution time) + 24 (day offset) - 9( utc conversion)
---
pipeline_key: hskr_point_expired
pipeline_type: redshift_transform_load
pipeline_dag_configs:
  start_date: 2018-01-01 16:00:00
  schedule_interval: "0 16 * * *"
transform:
  select_query: |
    WITH persons AS (
      SELECT
                DATE_TRUNC('day', created_at) AS expire_date,
                person_id,
                version,
                amount * - 1 AS total_withdraw_amount
        FROM
                hskr_point
        WHERE
                created_at >= TIMESTAMP'{start_time}' - interval '1 hour' - interval '9 hour' - interval '24 hour' and
                created_at < TIMESTAMP'{end_time}' - interval '1 hour' - interval '9 hour' - interval '24 hour'
                AND (point_type = 'inactive'
                OR(point_type = 'control'
                   AND title in('3개월이상 비활성화 적립금 소멸', 'expire_remain_message', 'Points expired due to 3 months of inactivation'))
                     )),
    temp AS (
        SELECT
                a.expire_date,
                p.person_id,
                date_trunc('month', created_at) AS collected_date,
                total_withdraw_amount,
                sum(CASE WHEN amount > 0 AND point_type <> 'withdrawal' THEN amount
                         ELSE 0
                     END) collected
        FROM
                hskr_point p,
                persons a
        WHERE
                p.person_id = a.person_id
                AND p.version < a.version
        GROUP BY
                a.expire_date,
                p.person_id,
                collected_date,
                total_withdraw_amount
             )
    SELECT
          q.person_id,
          q.expire_date,
          q.collected_date,
          greatest(
                  CASE WHEN collected_cum <= total_withdraw_amount THEN collected
                  ELSE collected - (collected_cum - total_withdraw_amount)
                  END, 0) AS points_withdraw
    FROM (
            SELECT
                c.expire_date,
                  c.collected_date,
                  c.person_id,
                  c.total_withdraw_amount,
                  c.collected,
                  sum(collected) OVER (PARTITION BY person_id ORDER BY collected_date DESC ROWS UNBOUNDED PRECEDING) AS collected_cum
            FROM
                  temp c ORDER BY
                          c.expire_date,
                          c.person_id ASC,
                          c.collected_date DESC) q
            WHERE
                  points_withdraw > 0
  delete_query : |
    DELETE
    FROM
      hskr_point_expired
    WHERE
      expire_date  >= TIMESTAMP'{start_time}' - interval '1 hour' - interval '9 hour' - interval '24 hour'
      and expire_date < TIMESTAMP'{end_time}' - interval '1 hour' - interval '9 hour' - interval '24 hour'
redshift:
  table_name: hskr_point_expired
  fields:
  - person_id
  - expire_date
  - collected_date
  - points_withdraw
  unique_key_list:
  - person_id
  - expire_date
  - collected_date
  increment_key: expire_date
  increment_key_type: timestamp
  copy_method: upsert
  create_table_syntax: |
    CREATE TABLE IF NOT EXISTS {table_name}
    (
      person_id               INT8          NOT NULL        ENCODE AZ64,
      expire_date             TIMESTAMP     NOT NULL        ENCODE AZ64,
      collected_date          TIMESTAMP     NOT NULL        ENCODE AZ64,
      points_withdraw         INT8          NOT NULL        ENCODE AZ64
    )
    DISTKEY(person_id)
    SORTKEY(expire_date)
    ;
