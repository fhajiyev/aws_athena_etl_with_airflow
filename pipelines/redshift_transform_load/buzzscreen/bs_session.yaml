---
pipeline_key: bs_session
pipeline_type: redshift_transform_load
pipeline_dag_configs:
  start_date: 2019-09-01 00:00:00
  schedule_interval: "0 0 * * *"
transform:
  select_query: |
    WITH
    filter_bs_imp AS(
        SELECT
            ifa, unit_id, created_at, 'bs_imp' AS action
        FROM
            bs_impression
        WHERE
            created_at >= TIMESTAMP'{start_time}'
            AND
            created_at < TIMESTAMP'{end_time}'
            AND
            ifa IS NOT NULL
            AND
            unit_id IS NOT NULL
    ),
    filter_ba_imp AS(
        SELECT
            ifa, unit_id, created_at, 'ba_imp' AS action
        FROM
            ba_impression
        WHERE
            created_at >= TIMESTAMP'{start_time}'
            AND
            created_at < TIMESTAMP'{end_time}'
            AND
            ifa IS NOT NULL
            AND
            unit_id IS NOT NULL
    ),
    filter_bs_clk AS(
        SELECT
            ifa, unit_id, created_at, 'bs_clk' AS action
        FROM
            bs_click
        WHERE
            created_at >= TIMESTAMP'{start_time}'
            AND
            created_at < TIMESTAMP'{end_time}'
            AND
            ifa IS NOT NULL
            AND
            unit_id IS NOT NULL
    ),
    filter_ba_clk AS(
        SELECT
            ifa, unit_id, created_at, 'ba_clk' AS action
        FROM
            ba_click
        WHERE
            created_at >= TIMESTAMP'{start_time}'
            AND
            created_at < TIMESTAMP'{end_time}'
            AND
            ifa IS NOT NULL
            AND
            unit_id IS NOT NULL
    ),
    merged_action AS(
        (SELECT * FROM filter_bs_imp)
        UNION
        (SELECT * FROM filter_ba_imp)
        UNION
        (SELECT * FROM filter_bs_clk)
        UNION
        (SELECT * FROM filter_ba_clk)
    ),
    time_diff_action AS(
        SELECT
            ifa,
            unit_id,
            created_at,
            action,
            CASE
                WHEN DATEDIFF(SECOND, LAG(created_at, 1) OVER (PARTITION BY ifa, unit_id ORDER BY created_at), created_at) <= 120 THEN 0
                ELSE 1
            END AS session_delimiter
        FROM
            merged_action
    ),
    session_numbering AS(
        SELECT
            ifa,
            unit_id,
            created_at,
            action,
            SUM(session_delimiter) OVER (PARTITION BY ifa, unit_id ORDER BY created_at ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS session_id
        FROM
            time_diff_action
    ),
    session AS(
        SELECT
            ifa,
            unit_id,
            MIN(created_at) AS start_time,
            MAX(created_at) AS end_time,
            DATEDIFF(SECOND, start_time, end_time) AS duration,
            COUNT(CASE WHEN action = 'bs_imp' THEN 1 END) AS content_imp,
            COUNT(CASE WHEN action = 'bs_clk' THEN 1 END) AS content_clk,
            COUNT(CASE WHEN action = 'ba_imp' THEN 1 END) AS ad_imp,
            COUNT(CASE WHEN action = 'ba_clk' THEN 1 END) AS ad_clk
        FROM
            session_numbering
        GROUP BY
            ifa, unit_id, session_id
    )
    SELECT
        session.*,
        bs_device.id AS device_id,
        bs_device.sex,
        bs_device.country,
        bs_device.year_of_birth
    FROM
        session
    LEFT JOIN
        bs_device ON session.ifa = bs_device.ifa
  delete_query: ''

redshift:
  table_name: bs_session
  fields:
  - ifa
  - unit_id
  - start_time
  - end_time
  - duration
  - content_imp
  - content_clk
  - ad_imp
  - ad_clk
  - device_id
  - sex
  - country
  - year_of_birth
  unique_key_list:
  - ifa
  - unit_id
  - start_time
  deduplicate_key_list:
  - ifa
  - unit_id
  - start_time
  increment_key: start_time
  increment_key_type: timestamp
  copy_method: incremental
  create_table_syntax: |
    CREATE TABLE IF NOT EXISTS {table_name}
    (
      ifa                           VARCHAR(64)    NOT NULL          ENCODE ZSTD,
      unit_id                       INT8           NOT NULL          ENCODE ZSTD,
      start_time                    TIMESTAMP      NOT NULL                     ,
      end_time                      TIMESTAMP      NOT NULL          ENCODE ZSTD,
      duration                      INT4           NOT NULL          ENCODE ZSTD,
      content_imp                   INT2           NOT NULL          ENCODE ZSTD,
      content_clk                   INT2           NOT NULL          ENCODE ZSTD,
      ad_imp                        INT2           NOT NULL          ENCODE ZSTD,
      ad_clk                        INT2           NOT NULL          ENCODE ZSTD,
      device_id                     INT4           DEFAULT NULL      ENCODE ZSTD,
      sex                           VARCHAR(1)     DEFAULT NULL      ENCODE ZSTD,
      country                       VARCHAR(2)     DEFAULT NULL      ENCODE ZSTD,
      year_of_birth                 INT4           DEFAULT NULL      ENCODE ZSTD,
      PRIMARY KEY(ifa, unit_id, start_time)
    )
    DISTKEY(ifa)
    SORTKEY(start_time)
    ;
