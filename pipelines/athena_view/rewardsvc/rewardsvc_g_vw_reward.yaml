---
pipeline_key: rewardsvc_g_vw_reward
pipeline_type: athena_view
pipeline_dag_configs:
  start_date: 2020-07-21 12:00:00
  schedule_interval: "0 * * * *"

alerts:
  slack:
    - trigger: failure
      args:
        channel: data-emergency
    - trigger: sla_miss
      args:
        channel: data-emergency
    - trigger: retry
      args:
        channel: data-warning

upstream_dependencies:
  - dag_id: athena_deduplicate_rewardsvc_g_reward
    timedelta_hours: 0

downstream_dependencies:
  - dag_id: check_data_rewardsvc_g_vw_reward_deduplicated
    task_id: generate_uuid

athena:
  query: |
    CREATE OR REPLACE VIEW {database}.{table}
    AS WITH dup_records AS (
      SELECT 
        account_id, version, transaction_id, app_id, publisher_user_id, resource_id, resource_type, event_type, amount, reward_status, created_at, updated_at, extra, scatter, unit_id,
        CASE
          WHEN reward_status = 'pending' THEN 0
          WHEN reward_status = 'success' THEN 1
          ELSE 0 END AS record_updated_version
      FROM {env}_rewardsvc.g_stream_reward
      WHERE
        partition_timestamp >= TIMESTAMP '{execution_date}' - interval '7' day - interval '1' hour
        AND partition_timestamp < TIMESTAMP '{next_execution_date}'
        AND created_at >= TIMESTAMP '{execution_date}' - interval '7' day
        AND created_at < TIMESTAMP '{next_execution_date}'
    ), dup_records_row_num AS (
      SELECT
        account_id, version, transaction_id, app_id, publisher_user_id, resource_id, resource_type, event_type, amount, reward_status, created_at, updated_at, extra, scatter, unit_id,
        RANK() OVER (
            PARTITION BY account_id, version
            ORDER BY record_updated_version DESC, updated_at DESC
        ) AS row_num
      FROM dup_records
    ), dedup_records_recent_7days AS (
      SELECT
        account_id, version, transaction_id, app_id, publisher_user_id, resource_id, resource_type, event_type, amount, reward_status, created_at, updated_at, extra, scatter, unit_id,
        DATE_TRUNC('hour', created_at) AS partition_timestamp
      FROM dup_records_row_num
      WHERE row_num = 1
    )
    SELECT account_id, version, transaction_id, app_id, publisher_user_id, resource_id, resource_type, event_type, amount, reward_status, created_at, updated_at, extra, scatter, unit_id, partition_timestamp
    FROM dedup_records_recent_7days
    UNION ALL
    SELECT account_id, version, transaction_id, app_id, publisher_user_id, resource_id, resource_type, event_type, amount, reward_status, created_at, updated_at, extra, scatter, unit_id, partition_timestamp
    FROM {env}_rewardsvc.g_reward
  database: "{env}_rewardsvc"
  table: g_vw_reward
