# CREATE TABLE `step_record` (
#   `id` int(11) NOT NULL AUTO_INCREMENT,
#   `app_id` bigint(20) NOT NULL,
#   `user_id` bigint(20) NOT NULL,
#   `step_at` datetime(6) NOT NULL,
#   `daily_step` int(10) unsigned NOT NULL,
#   `updated_at` datetime(6) NOT NULL,
#   `created_at` datetime(6) NOT NULL,
#   PRIMARY KEY (`id`),
#   UNIQUE KEY `step_record_user_id_step_at_65453a11_uniq` (`user_id`,`step_at`),
#   CONSTRAINT `step_record_chk_1` CHECK ((`daily_step` >= 0))
# ) ENGINE=InnoDB AUTO_INCREMENT=2923392 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

---
pipeline_key: buzzwalksvc_ls_step_record
pipeline_type: mysql_unload_s3
pipeline_dag_configs:
  start_date: 2020-09-16 17:00:00
  schedule_interval: "0 17 * * *"
mysql:
  conn_id: buzzwalksvc_mysql
  table_name: step_record
  fields:
  - id
  - app_id
  - user_id
  - step_at
  - daily_step
  - updated_at
  - created_at
  increment_key: id
  increment_key_type: numeric

s3:
  bucket: "{{ var.value.get('server_env', 'prod') }}-buzzvil-data-lake"
  prefix: buzzwalksvc/landing_snapshot/step_record/year={year}/month={month}/day={day}/hour={hour}
  file_key: buzzwalksvc_ls_step_record
  data_format: parquet

athena:
  create_table_syntax: |
    CREATE EXTERNAL TABLE IF NOT EXISTS {database}.{table}(
      id           INT8,
      app_id       INT8,
      user_id      INT8,
      step_at      TIMESTAMP,
      daily_step   INT8,
      updated_at   TIMESTAMP,
      created_at   TIMESTAMP
    )
    PARTITIONED BY (partition_timestamp timestamp)
    STORED AS PARQUET
    LOCATION '{location}'
    TBLPROPERTIES("parquet.compress"="SNAPPY");
  database: "{{ var.value.get('server_env', 'prod') }}_buzzwalksvc"
  table: ls_step_record
  location: "s3://{{ var.value.get('server_env', 'prod') }}-buzzvil-data-lake/buzzwalksvc/landing_snapshot/step_record"
  partition:
    key: partition_timestamp
    value: "{{execution_date.strftime('%Y-%m-%d %H:00:00')}}"
    subdir: "year={{ execution_date.strftime('%Y') }}/month={{ execution_date.strftime('%m') }}/day={{ execution_date.strftime('%d') }}/hour={{ execution_date.strftime('%H') }}"

