# CREATE TABLE `data_source` (
#   `pk` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
#   `id` varchar(255) NOT NULL,
#   `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
#   `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
#   `organization_id` bigint(20) unsigned NOT NULL,
#   `name` varchar(255) NOT NULL,
#   `description` text NOT NULL,
#   `interface_type` varchar(255) NOT NULL,
#   PRIMARY KEY (`pk`)
# ) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
---
pipeline_key: segmentsvc_ls_data_source
pipeline_type: mysql_unload_s3
pipeline_dag_configs:
  start_date: 2020-11-24 09:00:00
  schedule_interval: "0 * * * *"
mysql:
  conn_id: segmentsvc_mysql
  table_name: data_source
  increment_key: pk
  increment_key_type: dump
  fields:
    - pk
    - id
    - created_at
    - updated_at
    - organization_id
    - name
    - description
    - interface_type
s3:
  bucket: "{{ var.value.get('server_env', 'prod') }}-buzzvil-data-lake"
  prefix: segmentsvc/landing_snapshot/data_source/year={year}/month={month}/day={day}/hour={hour}
  file_key: segmentsvc_ls_data_source
  data_format: parquet
athena:
  create_table_syntax: |
    CREATE EXTERNAL TABLE IF NOT EXISTS {database}.{table}(
      pk                BIGINT,
      id                VARCHAR(255),
      created_at        TIMESTAMP,
      updated_at        TIMESTAMP,
      organization_id   BIGINT,
      name              VARCHAR(255),
      description       STRING,
      interface_type    VARCHAR(255)
    )
    PARTITIONED BY (partition_timestamp timestamp)
    STORED AS PARQUET
    LOCATION '{location}'
    TBLPROPERTIES("parquet.compress"="SNAPPY");
  database: "{{ var.value.get('server_env', 'prod') }}_segmentsvc"
  table: ls_data_source
  location: "s3://{{ var.value.get('server_env', 'prod') }}-buzzvil-data-lake/segmentsvc/landing_snapshot/data_source"
  partition:
    key: partition_timestamp
    value: "{{execution_date.strftime('%Y-%m-%d %H:00:00')}}"
    subdir: "year={{ execution_date.strftime('%Y') }}/month={{ execution_date.strftime('%m') }}/day={{ execution_date.strftime('%d') }}/hour={{ execution_date.strftime('%H') }}"